using DatabaseBenchmark.Common;
using DatabaseBenchmark.Databases.Sql;
using DatabaseBenchmark.Model;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace DatabaseBenchmark.Databases.Oracle
{
    public class OracleTableBuilder : SqlTableBuilder
    {
        protected override string BuildColumnType(Column column)
        {
            if (column.DatabaseGenerated && column.Nullable)
            {
                throw new InputArgumentException("Database-generated columns must not be nullable");
            }

            var columnType = new StringBuilder(column.Type switch
            {
                ColumnType.Boolean => "NUMBER(1)",
                ColumnType.Guid => "RAW(16)",
                ColumnType.Integer => "NUMBER(10)",
                ColumnType.Long => "NUMBER(19)",
                ColumnType.Double => "FLOAT(126)",
                ColumnType.String => "VARCHAR2(1000)",
                ColumnType.Text => "LONG",
                ColumnType.DateTime => "DATE",
                _ => throw new InputArgumentException($"Unknown column type \"{column.Type}\"")
            });

            if (column.DatabaseGenerated)
            {
                var suffix = column.Type switch
                {
                    ColumnType.Guid => " DEFAULT SYS_GUID()",
                    ColumnType.Integer => " GENERATED BY DEFAULT ON NULL AS IDENTITY",
                    ColumnType.Long => " GENERATED BY DEFAULT ON NULL AS IDENTITY",
                    _ => throw new InputArgumentException($"Column type \"{column.Type}\" can't be database-generated")
                };

                columnType.Append(suffix);
            }

            if (!column.Nullable)
            {
                columnType.Append(" NOT NULL");
            }

            return columnType.ToString();
        }
    }
}
